62be66a5a334b7c277f25c6b0ebd0d5e|file:///home/jdv/js/reactDice/src/App.js|20|1|V|javascript
			// socket.onmessage = (message) => {
				// console.log(message);
			// };
55051dbac8e4623b728092881a4edb27|file:///home/jdv/js/reactDice/src/App.js|26|59|v|javascript
	 || contentDefaultMessage
6d4afa8bf3685d01aad801a890049741|file:///home/jdv/js/reactDice/src/App.js|22|1|V|javascript
				const dataFromServer = JSON.parse(message.data);
				const stateToChange = {};
				if (dataFromServer.type === "userevent") {
					stateToChange.currentUsers = Object.values(dataFromServer.data.users);
				} else if (dataFromServer.type === "contentchange") {
					stateToChange.text = dataFromServer.data.editorContent;
				}
				stateToChange.userActivity = dataFromServer.data.userActivity;
				this.setState({
					...stateToChange
				});
4aa1ba31e75a69058940131c2c82ef7f|file:///home/jdv/js/reactDice/src/App.js|24|1|V|javascript
		/* When a user joins, I notify the server that a new user has joined to edit the document. */
		const logInUser = () => {
			const username = this.username.value;
			if (username.trim()) {
				const data = {
					username
				};
				this.setState({
					...data
				}, () => {
					socket.send(JSON.stringify({
						...data,
						type: "userevent"
					}));
				});
			}
		}
efd048971c2e7bb401d855576e22a351|file:///home/jdv/js/reactDice/src/App.js|18|2|V|javascript
				logInUser();
f528764d624db129b32c21fbca0cb8d6|file:///home/jdv/js/reactDice/src/App.js|11|34|v|javascript
	127.0.0.1
e7f1120b33c9c2a41fced90c505c4328|file:///home/jdv/js/reactDice/server/main.go|47|20|V|go
				log.Fatalf("\n\n==> Error reading message:\n\n%v\n\n", err)
			}
832cecfe7eaa5ebf67759f364af5f8a8|file:///home/jdv/js/reactDice/server/main.go|47|3|V|go
				log.Fatalf("\n\n==> Error reading message:\n\n%v\n\n", err)
daca230c8a7a53e9f4c86ba52f2e129d|file:///home/jdv/js/reactDice/server/main.go|53|3|V|go
				log.Fatalf("\n==> Error :\n\n%v\n\n", err)
9f3d2135e1122ac9369015292624bb0d|file:///home/jdv/js/reactDice/package.json|21|1|V|json
		"start": "concurrently \"sass --watch ./style/sass:./style/css\" "
3bb1fd986097336594697d9aae4d134f|file:///home/jdv/js/reactDice/package.json|21|70|v|json
	npm run tsc:w
0fdc336911a6b4473390edda26862c98|file:///home/jdv/js/reactDice/package.json|22|33|V|json
			"start": "react-scripts start",
a1b01e734b573fca08eb1a65e6df9a38|file:///home/jdv/js/reactDice/package.json|21|43|v|json
	style
8166fac00e9778b1bb7628f2eeec2259|file:///home/jdv/js/reactDice/package.json|23|1|V|json
			""concurrently \"cd server && npm run start\" \"npm run start\""
2f0403d8ed883223a8d76fd2dcb85f9b|file:///home/jdv/js/reactDice/package.json|23|27|v|json
	cd server && npm run start
3d2c42f5ad77e2edaa6819f03e4b36a1|file:///home/jdv/js/reactDice/package.json|22|72|V|json
			"start-dev": ""concurrently \"sass --watch ./src/sass/App.scss ./src/App.css\" \"./server/make watch\" \"npm run start\"", 
87d30ed976956d26577d6955789f3eba|file:///home/jdv/js/reactDice/package.json|22|12|V|json
			"dev": ""concurrently \"sass --watch ./src/sass/App.scss ./src/App.css\" \"npm run start\"",
cad578b87a2842935b7a9e4b265c0f7c|file:///home/jdv/js/reactDice/package.json|23|12|v|json
	concurrently \"sass --watch ./src/sass/App.scss ./src/App.css\" \"npm run start\"
8bf02c416ffc3742066dd923429b4dd2|file:///home/jdv/js/reactDice/package.json|23|27|v|json
	sass --watch ./src/sass/App.scss ./src/App.css
fe28bba7af127a34375709c6118d6401|file:///home/jdv/js/reactDice/package.json|23|38|V|json
			"dev": ""concurrently \"npm run sass\" \"npm run start\"",
			"sass": "sass --watch ./src/sass/App.scss ./src/App.css"
ea2b2676c28c0db26d39331a336c6b92|file:///home/jdv/js/reactDice/package.json|24|4|v|json
	start
09492b40f9f9ebe421722fa7b7634c9d|file:///home/jdv/js/reactDice/package.json|24|26|v|json
	command1
049ef08c70c6fc4e27003a1244cdbf0e|file:///home/jdv/js/reactDice/package.json|24|77|v|json
	command2
f072175e5ef1aa4835bd449a42dd1db3|file:///home/jdv/js/reactDice/package.json|24|31|V|json
			"dev": "concurrently \"sass --watch ./src/sass/App.scss ./src/App.css\" \"npm run start\""
7556a08efaa166a133a179a7fadeed7c|file:///home/jdv/js/reactDice/package.json|23|3|V|json
			""
c438cf574484c70ecdb82a41e00e4d23|file:///home/jdv/js/reactDice/package.json|23|1|V|json
			"dev-start": "concurrently \"npm run watch-server\" \"npm run watch-sass\" \"npm run start\"",
7b5f252a8bb22700a111f006251f4325|file:///home/jdv/js/reactDice/package.json|23|26|v|json
	\"npm run watch-server
1d7a2000e4a3962dc60b112fbc40bd51|file:///home/jdv/js/reactDice/package.json|23|51|v|json
	npm run start
33bf66f9795eca122171e119700b493d|file:///home/jdv/js/reactDice/server/main.go|46|8|v|go
	Fatalf
0fdb49974da67f4673f5b48e0464424c|file:///home/jdv/js/reactDice/server/main.go|54|1|V|go
		for {
			messageType, p, err := conn.ReadMessage()
			if err != nil {
				log.Fatalf("\n\n==> Error reading message:\n\n%v\n\n", err)
			}
	
			fmt.Println(string(p))
	
			if err := conn.WriteMessage(messageType, p); err != nil {
				log.Fatalf("\n==> Error :\n\n%v\n\n", err)
			}
		}
4102f005ffccd0fea4a45ff165dbc49f|file:///home/jdv/js/reactDice/src/App.js|16|1|V|javascript
		socket.onopen = () => {
			console.log('WebSocket Client Connected');
		};
	
		socket.onmessage = (msg) => {
			console.log(msg)
		};
bdf5167836986922925c35cc1009f417|file:///home/jdv/js/reactDice/src/App.js|15|1|V|javascript
		// Set up the handshake with server
50b159defd151c35b54ab906479c254f|file:///home/jdv/js/reactDice/src/App.js|15|2|v|javascript
	exampleSocket
8bc91e4653aeceb5a48131e6bc7b54b9|file:///home/jdv/js/reactDice/src/App.js|15|1|V|javascript
		socket.onopen = function (event) {
			socket.send("Here's some text that the server is urgently awaiting!");
		};
eb3503f1aebbe37c3dfb3308a5aafb21|file:///home/jdv/js/reactDice/server/main.go|40|1|V|go
	// Listen for new websocket messages
	func reader(conn *websocket.Conn) {
		fmt.Println("Listening for messages on websocket connection...")
		for {
			messageType, p, err := conn.ReadMessage()
			if err != nil {
				log.Printf("\n\n==> Error reading message:\n\n%v\n\n", err)
				return
			}
			if err := conn.WriteMessage(messageType, p); err != nil {
				log.Printf("\n==> Error :\n\n%v\n\n", err)
				return
			}
		}
	}
cae7dce5466fc31ca3cfa0ab52161282|file:///home/jdv/js/reactDice/server/main.go|15|1|V|go
		fmt.Fprintf(w, "Hello from the Websocket Endpoint")
		// Deal with CORS, which is skipped for now.  TODO
		upgrader.CheckOrigin = func(r *http.Request) bool { return true }
	
		// Upgrade the http connection to websocket connection.
		ws, err := upgrader.Upgrade(w, r, nil)
		if err != nil {
			fmt.Printf("\n==> Error in websocket upgrader:\n\n%v\n\n", err)
			log.Fatalf("\n==> Error in websocket upgrader:\n\n%v\n\n", err)
		}
	
		// Show a client has connected
		log.Println("Client Connected")
	
		// Write a message to the client
		err = ws.WriteMessage(1, []byte("Greetings, Client.  This is your message verifying your connection to the ws server!"))
		if err != nil {
			log.Println(err)
		}
	
		// Start listening for messages on the passed in websocket
		reader(ws)
	
7a1476e0cdef0da0653ba8addb71704b|file:///home/jdv/js/reactDice/server/main.go|14|1|V|go
	func wsEndpoint(w http.ResponseWriter, r *http.Request) {
	}
cf134fde571e96ed5c6b6617113349e2|file:///home/jdv/js/reactDice/server/main.go|10|1|V|go
	func homePage(w http.ResponseWriter, r *http.Request) {
		fmt.Fprintf(w, "Home Page")
	}
	
1d6657d9bbb30ae9432f870cc3bf8964|file:///home/jdv/js/reactDice/server/main.go|14|6|v|go
	homePage
8cf04a9734132302f96da8e113e80ce5|file:///home/jdv/js/reactDice/server/main.go|15|18|v|go
	Home
1f39397b509a03df3decbf0370d5fd4a|file:///home/jdv/js/reactDice/server/main.go|14|1|V|go
	
	func wsEndpoint(w http.ResponseWriter, r *http.Request) {
		fmt.Fprintf(w, "WS Endpoint Reached")
	}
	
	var upgrader = websocket.Upgrader{
		ReadBufferSize:  1024,
		WriteBufferSize: 1024,
	}
	
	func wsHandler(w http.ResponseWriter, r *http.Request) {
		conn, err := upgrader.Upgrade(w, r, nil)
		if err != nil {
			log.Println(err)
			return
		}
		// ... Use conn to send and receive messages.
		for {
			messageType, p, err := conn.ReadMessage()
			if err != nil {
				log.Println(err)
				return
			}
			if err := conn.WriteMessage(messageType, p); err != nil {
				log.Println(err)
				return
			}
		}
	}
d1cb9166d6f45b954d93b65d3a5b2ead|file:///home/jdv/js/reactDice/server/main.go|27|1|V|go
		setupRoutes()
		log.Fatal(http.ListenAndServe(":8080", nil))
840974ba6a04d83fbabb1184ae8ab5d0|file:///home/jdv/js/reactDice/server/main.go|19|6|v|go
	handleWS
def649c99ffee2edb54f738a98ae0ae6|file:///home/jdv/js/reactDice/server/main.go|6|10|V|go
		"github.com/gorilla/websocket"
88c3338e95a9fed8d034a3cbd217c5c1|file:///home/jdv/js/reactDice/server/main.go|1|1|V|go
	package main
	
	import (
		"fmt"
		socketio "github.com/googollee/go-socket.io"
		"log"
		"net/http"
	)
	
	func homePage(w http.ResponseWriter, r *http.Request) {
		fmt.Fprintf(w, "Home Page")
	}
	
	func diceEndpoint(w http.ResponseWriter, r *http.Request) {
		fmt.Fprintf(w, "Dice Login Page")
	}
	
	func wsHandler() {
		// Define a new socketio server instance
		server, err := socketio.NewServer(nil)
		if err != nil {
			log.Fatal(err)
		}
	
		server.On("connection", func(so socketio.Socket) {
	
			log.Println("on connection")
	
			so.Join("chat")
	
			so.On("chat message", func(msg string) {
				log.Println("emit:", so.Emit("chat message", msg))
				so.BroadcastTo("chat", "chat message", msg)
			})
	
			so.On("disconnection", func() {
				log.Println("on disconnect")
			})
		})
	
		server.On("error", func(so socketio.Socket, err error) {
			log.Println("error:", err)
		})
	
		http.Handle("/socket.io/", server)
	
		fs := http.FileServer(http.Dir("static"))
		http.Handle("/", fs)
	
		log.Println("Serving at localhost:5000...")
		log.Fatal(http.ListenAndServe(":5000", nil))
	
	}
	
	func setupRoutes() {
		http.HandleFunc("/", homePage)
		http.HandleFunc("/ws", wsHandler)
		http.HandleFunc("/dice", diceEndpoint)
	}
	
	func main() {
		fmt.Println("Go WS Server started on port 8080")
		setupRoutes()
		log.Fatal(http.ListenAndServe(":8080", nil))
	}
7b98980e6ea07875ce2d7c8d9adc1629|file:///home/jdv/js/reactDice/server/asset/index.html|21|1|V|html
	    <script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
a47fe3f7a607509d5eb19a7d0ca2c9d6|file:///home/jdv/js/reactDice/public/index.html|14|1|V|html
	    <!--
	      manifest.json provides metadata used when your web app is installed on a
	      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
	    -->
d2ae7389a7d720376c0232d191aead4a|file:///home/jdv/js/reactDice/public/index.html|15|1|V|html
	    <!--
	      Notice the use of %PUBLIC_URL% in the tags above.
	      It will be replaced with the URL of the `public` folder during the build.
	      Only files inside the `public` folder can be referenced from the HTML.
	
	      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
	      work correctly both with client-side routing and a non-root public URL.
	      Learn how to configure a non-root public URL by running `npm run build`.
	    -->
c35d5201b5aa8963cfe7d430e26a36e8|file:///home/jdv/js/reactDice/public/index.html|23|1|V|html
	    <!--
	      This HTML file is a template.
	      If you open it directly in the browser, you will see an empty page.
	
	      You can add webfonts, meta tags, or analytics to this file.
	      The build step will place the bundled scripts into the <body> tag.
	
	      To begin the development, run `npm start` or `yarn start`.
	      To create a production bundle, use `npm run build` or `yarn build`.
	    -->
a3a6e2e3d742bb71bb34f16bf7fb9f77|file:///home/jdv/js/reactDice/public/index.html|12|2|V|html
		<script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
48e11b0aee0727e0b52db5cf0cb2fb57|file:///home/jdv/js/reactDice/src/App.js|11|48|V|javascript
	let socket = new WebSocket("ws://localhost:8000");
ec264998e7729f538548ea403ab5c0c6|file:///home/jdv/js/reactDice/src/App.js|12|1|V|javascript
		console.log(`Socket information:\n`)
		console.log(socket)
8e8bd8e6c3032b9a39846bd6e86f553b|file:///home/jdv/js/reactDice/src/App.js|13|1|V|javascript
		var socket = io();
	
		var form = document.getElementById('form');
		var input = document.getElementById('input');
	
		form.addEventListener('submit', function(e) {
		  e.preventDefault();
		  if (input.value) {
			socket.emit('chat message', input.value);
			input.value = '';
		  }
		});
7cc79bb8a13bd8a6d5e8ea28a4859291|file:///home/jdv/js/reactDice/src/App.js|15|1|V|javascript
		var form = document.getElementById('form');
		var input = document.getElementById('input');
	
230c7211ea7a1747d80123964ab1800b|file:///home/jdv/js/reactDice/src/App.js|15|1|V|javascript
		var form = document.getElementById('form');
		var input = document.getElementById('input');
	
		form.addEventListener('submit', function(e) {
			e.preventDefault();
			if (input.value) {
				socket.emit('chat message', input.value);
				input.value = '';
			}
		});
a835c68262f808a69ae65dd2496aaf75|file:///home/jdv/js/reactDice/src/App.js|13|1|V|javascript
		const socket = openSocket('http://localhost:8000');
3b8130753913dd1a00cb37af32376555|file:///home/jdv/js/reactDice/src/Store.js|126|1|V|javascript
	    sortDice: () => 
	        set(state =>  {
	            state.dice.sort((a, b) =>  a.val - b.val)
	        }),
10d0842d12683d27bb1fd376bdd3fd76|file:///home/jdv/js/reactDice/src/Store.js|49|2|v|javascript
	sortDice
fb601e84d2bcce28aa2c32d2c8434797|file:///home/jdv/js/reactDice/src/Store.js|48|9|V|javascript
		socket: 
8d93c5c43244607ff0d0e21a34a2b292|file:///home/jdv/js/reactDice/src/Store.js|49|1|V|javascript
		getSocket: () => 
			set(state =>  {
				state.dice.sort((a, b) =>  a.val - b.val)
			}),
4f70674b7a4f0ed20282b06199b1f7c9|file:///home/jdv/js/reactDice/src/App.js|3|1|V|javascript
	import openSocket from 'socket.io-client'; // npm i --save socket.io-client
5b3723ea92941e230df2312572a60cd2|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|14|1|V|javascript
			if (input.value) {
				socket.emit('chat message', input.value);
				input.value = '';
			}
bc04ccb8706c1f17c962714287a7a72b|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|7|1|V|javascript
		const addMessageToHistory = UseStore(state => state.addMessageToHistory) 
3cf461aef5f619ca7651f33efb9f170c|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|5|1|V|javascript
		const latestMessage = UseStore(state => state.latestMessage)
64c6d999a1a1ec945f6403103fe04e15|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|5|8|v|javascript
	latestMessage
c25e7f31f1bfd95652f6326aee9332b8|file:///home/jdv/js/reactDice/server/main.go|40|1|V|go
	
		server.OnError("/", func(s socketio.Conn, e error) {
			fmt.Println("meet error:", e)
		})
36879b2d10ba75670a6394db7b29a6d6|file:///home/jdv/js/reactDice/server/main.go|41|1|V|go
		server.OnError("/", func(s socketio.Conn, e error) {
			fmt.Println("meet error:", e)
		})
	
22d21aea2bd2cb6851d044f40af556ad|file:///home/jdv/js/reactDice/server/main.go|34|1|V|go
		server.OnEvent("/", "bye", func(s socketio.Conn) string {
			last := s.Context().(string)
			s.Emit("bye", last)
			s.Close()
			return last
		})
9d233a1ddebd43618349a022c9d9b9d0|file:///home/jdv/js/reactDice/server/main.go|41|1|V|go
		server.OnEvent("/", "chat message", func(s socketio.Conn) string {
			last := s.Context().(string)
			s.Emit("bye", last)
			s.Close()
			return last
		})
	
b6533591522395806f5dcc7d70cc6789|file:///home/jdv/js/reactDice/server/main.go|29|1|V|go
		server.OnEvent("/chat", "msg", func(s socketio.Conn, msg string) string {
			s.SetContext(msg)
			return "recv " + msg
		})
	
f899165063f6d5f5fdd0d05dc5fe138e|file:///home/jdv/js/reactDice/server/main.go|35|19|V|go
			s.SetContext(msg)
52159af980f1391e0acb83c40ac86c85|file:///home/jdv/js/reactDice/server/asset/index.html|24|1|V|html
	      var socket = io();
	      // socket.emit('msg', 'hello');
	      var s2 = io("/chat");
	      socket.on('reply', function(msg){
	        $('#messages').append($('<li>').text(msg));
	      });
	      $('form').submit(function(){
	        s2.emit('msg', $('#m').val(), function(data){
	          $('#messages').append($('<li>').text(data));
	        });
	        socket.emit('notice', $('#m').val());
	        $('#m').val('');
	        return false;
	      });
f8fed6e60ba3656ce69b8e95eb394f50|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|10|1|V|javascript
		// var form = document.getElementById('form');
		// var input = document.getElementById('chatInputBox');
	
		// form.addEventListener('submit', function(e) {
			// e.preventDefault();
			// if (input.value) {
				// socket.emit('chat message', input.value);
				// input.value = '';
			// }
		// });
442aef26447a8174c98efb20250a93ab|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|10|1|^v|javascript
				
				
				
				
				
				
				
				
				
				
				
				
				
				
aee92d4f4a46d0ab5aeff76ea10b3d62|file:///home/jdv/js/reactDice/src/Store.js|49|1|V|javascript
		socket: openSocket('http://localhost:8000'),
52b1d357a664914d95860372794a6f35|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|5|1|V|javascript
		const socket = UseStore(state => state.socket)
79daba92cd19e7b8444da337cdec990a|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|80|1|V|scss
			max-height: 200px;
21bf18f2c70703b526ee23bab9672fd1|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|75|1|V|scss
			grid-area: "tab-panel";
f1e5d7a5fe13498abbdeb0f1f19136a8|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|26|19|v|scss
	panel
940d4fc4143cc460dd6d2f453522eab6|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|81|1|V|scss
			// max-height: 200px;
99a31ab8ab8648633762226222791cf0|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|83|19|V|scss
			min-height: $chatHeight;
ef09f011f2a5c59d4ea5b326eaa4aa1f|file:///home/jdv/js/reactDice/src/components/Timer/Timer.js|4|1|V|javascript
				// <Time duration={30} delay={2000}/>
70bb2287548997833aed92f8f881b502|file:///home/jdv/js/reactDice/src/sass/_map.scss|13|1|V|scss
		max-height: 10em;
894eb1d6cad7a233ce7d04cd63dcf03d|file:///home/jdv/js/reactDice/src/sass/_map.scss|13|17|V|scss
		// max-height: 10em;
5b92822e4c3345a5e777ae5faedfeaa1|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|23|1|V|scss
	.react-tabs {
		// -webkit-tap-highlight-color: transparent;
	
		&__tab-list {
			grid-area: "tab-list";
			background-color: colors.$Orange;
	
			border-bottom: 1px solid colors.$Light-Gray;
			margin: 0 0 10px;
			padding: 0;
		}
	
		&__tab {
			background-color: green;
			display: inline-block;
			border: 1px solid transparent;
			border-bottom: none;
			bottom: -1px;
			position: relative;
			list-style: none;
			padding: 6px 12px;
			cursor: pointer;
			color: colors.$White;
	
			&--selected {
				background: colors.$Purple;
				border-color: colors.$Body-Background;
				color: colors.$Body-Background;
				border-radius: 5px 5px 0 0;
			}
	
			&--disabled {
				color: GrayText;
				cursor: default;
			}
	
			&:focus {
				box-shadow: 0 0 5px colors.$Cyan;
				border-color: colors.$Cyan;
				outline: none;
	
				&:after {
					content: "";
					position: absolute;
					height: 5px;
					left: -4px;
					right: -4px;
					bottom: -5px;
					background: colors.$White;
				}
			}
		}
	
		&__tab-panel {
			grid-area: "tab-panel";
	
			display: none;
	
			background-color: colors.$Yellow;
			$chatHeight: 20em;
			max-height: $chatHeight;
			min-height: $chatHeight;
			// -webkit-tap-highlight-color: transparent;
	
			&--selected {
				// display: block;
				display: flex;
			}
		}
f6b3601c6feb06eabecde726164dc1a0|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|23|1|V|scss
	.react-tabs {
		// -webkit-tap-highlight-color: transparent;
	
		&__tab-list {
			grid-area: "tab-list";
			background-color: colors.$Orange;
	
			border-bottom: 1px solid colors.$Light-Gray;
			margin: 0 0 10px;
			padding: 0;
		}
	
		&__tab {
			background-color: green;
			display: inline-block;
			border: 1px solid transparent;
			border-bottom: none;
			bottom: -1px;
			position: relative;
			list-style: none;
			padding: 6px 12px;
			cursor: pointer;
			color: colors.$White;
	
			&--selected {
				background: colors.$Purple;
				border-color: colors.$Body-Background;
				color: colors.$Body-Background;
				border-radius: 5px 5px 0 0;
			}
	
			&--disabled {
				color: GrayText;
				cursor: default;
			}
	
			&:focus {
				box-shadow: 0 0 5px colors.$Cyan;
				border-color: colors.$Cyan;
				outline: none;
	
				&:after {
					content: "";
					position: absolute;
					height: 5px;
					left: -4px;
					right: -4px;
					bottom: -5px;
					background: colors.$White;
				}
			}
		}
	
		&__tab-panel {
			grid-area: "tab-panel";
	
			display: none;
	
			background-color: colors.$Yellow;
			$chatHeight: 20em;
			max-height: $chatHeight;
			min-height: $chatHeight;
			// -webkit-tap-highlight-color: transparent;
	
			&--selected {
				// display: block;
				display: flex;
			}
		}
	}
67aa6ad8a0ff0192f8cccd8dd8eab19a|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|6|1|V|scss
		grid-area: tabbox;
	
	    display: grid;
	    grid-template-columns:  1fr;
	    grid-template-rows: 1fr 1fr;
	    grid-auto-flow: row;
	    grid-template-areas:
	        "tab-list"
	        "tab-panel";
	
	    column-gap: 1%;
	    row-gap: 1%;
	
		background-color: colors.$Red;
		max-height: 20vh;
ae97c411eee624d190ee8a8d8cb284c7|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|5|5|V|scss
	#tabs-grid-container {
cacc459020f831c7faec1705cbd45249|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|27|1|^v|scss
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
6262f2cd02f1b381f13300754b83b864|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|74|1|V|scss
		&__tab-panel {
			grid-area: "tab-panel";
	
			display: none;
	
			opacity: 20%;
			background-color: colors.$Yellow;
			$chatHeight: 20em;
			max-height: $chatHeight;
			min-height: $chatHeight;
			// -webkit-tap-highlight-color: transparent;
	
			&--selected {
				// display: block;
				display: flex;
			}
		}
2455125d6d28fc5fe5f854275a733862|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|52|25|V|scss
			background-color: green;
9f27410725ab8cc8854a2769c7a516b8|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|52|21|v|scss
	green
ac101b32dda4448cf13a93fe283dddd8|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|52|29|v|scss
	Body
87f8a6ab85c9ced3702b4ea641ad4bb5|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|52|29|v|scss
	Medium
d274a701511a163ec1b780b401f3fcf4|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|65|26|v|scss
	Body-Background
a9df07a59924474cceb6f542136609da|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|65|1|V|scss
				border-color: colors.$White;
				color: colors.$Body-Background;
				border-radius: 5px 5px 0 0;
97d2e881429431845817b16eec73c765|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|63|2|V|scss
			color: colors.$Body-Background;
334c4a4c42fdb79d7ebc3e73b517e6f8|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|27|12|v|scss
	none
16bb14d968a238c6d9c84a1e64901aca|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|6|2|v|scss
	react-tabs
897a779351421523cadbafccdce22efe|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|27|12|v|scss
	flex
111e9cd6f4830ca483a4ff494d8bbfb7|file:///home/jdv/js/reactDice/src/components/Tabs/TabComponent.js|7|39|v|javascript
	tabs-grid
5db8dca30c2d7f0c2bc225ae852c5053|file:///home/jdv/js/reactDice/src/components/Tabs/TabComponent.js|7|45|v|javascript
	tabs
0a89a44e057df060ea29ee810dbaba97|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|80|15|v|scss
	200px
e0bf74e27dca56f6e02672bc4957d0b7|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|24|14|V|scss
		max-height: ;
5803d77e7ffc1369b86a3f77013fae0b|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|19|28|V|scss
		background-color: colors.$Red;
105d84bfae4c8b58fcafc9d1449f66e8|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|77|12|V|scss
			display: none;
50666f8280438958ce87e8509a5bcd73|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|24|17|V|scss
		max-height: 50%;
167592f0674a70c45a0ec71fb2247c71|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|47|30|V|scss
				border-color: colors.$White;
6eb956e5bbcfb65f67c635cc8b0a24bb|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|49|3|V|scss
				border-radius: 5px 5px 0 0;
25a81701fbfa4a1efdf660a950c1d006|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|44|25|v|scss
	White
8db513d186acfba0159626d23a8fd015|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|79|14|V|scss
			opacity: 40%;
d4e00ed8c1e130c08557f72f3f1e33a6|file:///home/jdv/js/reactDice/src/sass/_tabs.scss|19|17|V|scss
		// background-color: colors.$Grid-Container-Background;
7443b1586cc85feaaf22815426508111|file:///home/jdv/js/reactDice/src/sass/_timer.scss|15|1|V|scss
	    background-color: colors.$Purple;
19085405564140c70808099f11cfaa60|file:///home/jdv/js/reactDice/src/sass/_timer.scss|17|1|V|scss
	
	.countdown-timer-container {
	    display: flex;
	    margin: auto;
	    background-color: colors.$Purple;
	}
53e62e359d40e0cec0565bf3e5f74d26|file:///home/jdv/js/reactDice/src/sass/_timer.scss|14|1|V|scss
	    // background-color: colors.$Background;
cb32674f9f9c763bbebc1c83fd486d23|file:///home/jdv/js/reactDice/src/sass/_map.scss|38|1|V|scss
		@keyframes pulse {
			0%, 100% {
				box-shadow: 0 80%px 2px rgba(colors.$White, 80%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			8% {
				box-shadow: 0 80%px 2px rgba(colors.$Red, 80%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			16% {
				box-shadow: 0 80%px 0px rgba(black, 10%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			24% {
				box-shadow: 0 80%px 2px rgba(colors.$Orange, 80%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			32% {
				box-shadow: 0 80%px 0px rgba(black, 10%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			40% {
				box-shadow: 0 80%px 2px rgba(colors.$Yellow, 80%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			48% {
				box-shadow: 0 80%px 0px rgba(black, 10%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			56% {
				box-shadow: 0 80%px 2px rgba(colors.$Green, 80%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			64% {
				box-shadow: 0 80%px 0px rgba(black, 10%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			72% {
				box-shadow: 0 80%px 2px rgba(colors.$Blue, 80%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			80% {
				box-shadow: 0 80%px 0px rgba(black, 10%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			88% {
				box-shadow: 0 80%px 2px rgba(colors.$Purple, 80%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
			96% {
				box-shadow: 0 80%px 0px rgba(black, 10%), 0 6px 20px 0 rgba(black, 20%); /* hoffset voffset blur spread color */
			}
		}
515e7ad8e041d162d8433d000a0f34a5|file:///home/jdv/js/reactDice/src/sass/_map.scss|35|1|V|scss
			// animation: pulse 60s ease-in-out 0s infinite;
b7e534bb5fe6356ff56c7ccdcd07fe11|file:///home/jdv/js/reactDice/src/sass/_map.scss|21|1|V|scss
				margin-top: auto;
5647ddb7ac66880717a930455e75be37|file:///home/jdv/js/reactDice/src/sass/_map.scss|16|1|V|scss
			display: flex;
4b63e495e0a3e9a1a2441fd8d07598f3|file:///home/jdv/js/reactDice/src/sass/_map.scss|38|12|V|scss
			padding: 6px;
e6cded5d049ac8706bd164613b622d53|file:///home/jdv/js/reactDice/src/sass/_map.scss|17|2|V|scss
			background-color: blue;
eaae26a6fb20ed3ef54fb23bfa0b1fcc|file:///home/jdv/js/reactDice/src/sass/_map.scss|30|7|v|scss
	width
4a251318f476fb8cd908bb2b10748dfb|file:///home/jdv/js/reactDice/src/sass/_map.scss|1|1|V|scss
			margin: auto;
bfc27cae5aff0e236a639aaea0556404|file:///home/jdv/js/reactDice/src/sass/_map.scss|34|1|V|scss
			margin-top: 1fr;
ea7156050a6d1023b33d8d29f46dd8ef|file:///home/jdv/js/reactDice/src/sass/_map.scss|32|21|v|scss
	lighten
e20f352f07dfbda67b934760a1aeac82|file:///home/jdv/js/reactDice/src/sass/_map.scss|32|21|v|scss
	darken
d90ba124b24dbeb1abbe2884027171ff|file:///home/jdv/js/reactDice/src/sass/_map.scss|32|21|v|scss
	color.
ea5e8865a573dc5a3b2f9682bb3d9525|file:///home/jdv/js/reactDice/src/sass/_map.scss|32|21|v|scss
	change(
e0d047111b9ff9dd1ce8544fb9b7fa1b|file:///home/jdv/js/reactDice/src/sass/_map.scss|32|32|v|scss
	, $blackness: 25%)
8b56cdf48109ed4cb5b930aa8b310936|file:///home/jdv/js/reactDice/src/sass/_map.scss|1|1|V|scss
			background-color: colors.$Red;
d7283436a2e57e0192bc0ff1a21cea34|file:///home/jdv/js/reactDice/src/sass/_map.scss|1|1|V|scss
			border-color: black;
ff2364a0be3d20e46cc69efb36afe9a5|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|11|19|v|scss
	space
adb115059e28d960fa8badfac5516667|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|12|15|v|scss
	center
36f7bf45d87eefac69ade303e73a8fb8|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|11|19|v|scss
	space-evenly
ec6ec1998fc5b85039741f62688f0fb0|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|14|17|V|scss
		margin-left: 1%;
04fec5cdd7efb3af46b9f5eba66f182e|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|20|1|V|scss
			margin-left: 2%;
811882fecd5c7618d7099ebbd39ea254|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|21|10|v|scss
	left
f94e3061a8c0e261295dbfe07e0b0687|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|14|1|V|scss
		padding-left: 2%;
c394bb3135c8d4531153dd854e3658da|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|14|9|V|scss
		padding%;
174d557cdec066535e2fd68d32e8cd04|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|20|1|V|scss
			margin-left: 1%;
			margin-right: 1%;
078ec2cfd9e5d9e7de2f4ff36af0a34c|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|18|1|V|scss
			height: 5em;
			width: auto;
69eece78976588b4b27c8308e65bd991|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|36|1|V|scss
			@keyframes grow-glow {
				0% {box-shadow: 0 0 10px 5px rgba(colors.$Yellow, 0.5); /* hoffset voffset blur spread color */}
				100% {box-shadow: 0 0 10px 5px rgba(colors.$Yellow, 0.8); /* hoffset voffset blur spread color */}
			}
	
51e6cd92b6c45f9affdc158ecca2b8b8|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|38|48|v|scss
	Yellow
e7ae380e4d4de361414f0d3381ad033c|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|30|1|V|scss
				animation-name: hover-glow;
				animation-duration: 0.5s;
				animation-timing-function: ease-out;
				animation-fill-mode: forwards;
e0542f579df8e8138ade69f8f5310bf2|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|54|19|v|scss
	hover
d442ba67bc0e302715a7620c79ec3931|file:///home/jdv/js/reactDice/src/components/Map/Image.js|1|39|V|javascript
	import Zoom from 'react-medium-image-zoom'
b80f8645ade59ffc779c0bc125f7a0f6|file:///home/jdv/js/reactDice/src/components/Map/Image.js|9|21|V|javascript
				{/* 			<Zoom overlayBgColorEnd='rgba(255,255,255, 0)' zoomMargin={80} > */}
2d5baee0b47509b2a5d8f70a6d6babde|file:///home/jdv/js/reactDice/src/components/Map/Image.js|15|8|V|javascript
				{/* 			</Zoom> */}
19d9c601e4762e2cedb40986145cc459|file:///home/jdv/js/reactDice/src/components/Map/Image.js|9|4|^v|javascript
		
		
		
		
		
		
fb0acfc11e600d591ffbe065f7a19963|file:///home/jdv/js/reactDice/src/components/Map/Image.js|21|1|V|javascript
				  </div>
877e569db07520884c36df5183375780|file:///home/jdv/js/reactDice/src/components/Map/Image.js|15|25|v|javascript
	My Name is John
176c88215c5a67ff55136286b9a67fc8|file:///home/jdv/js/reactDice/src/components/Map/Image.js|15|29|v|javascript
	map-zoom-overlay
380e537acdaedd487ca1adb49d020f7e|file:///home/jdv/js/reactDice/src/sass/_map.scss|26|4|v|scss
	overlay
dc4d53aa0d117d8b189b36d161af4e96|file:///home/jdv/js/reactDice/src/sass/_map.scss|27|14|v|scss
	absolute
cec315e3d0975e5cc2811d5d8725f149|file:///home/jdv/js/reactDice/src/sass/_map.scss|27|14|v|scss
	fixed
f70a7cfc85ea81c91b71bd2ce56cc96a|file:///home/jdv/js/reactDice/src/sass/_map.scss|28|14|V|scss
				bottom: 15;
a5936edbdeeaed1b75c52311d9f52611|file:///home/jdv/js/reactDice/src/sass/_map.scss|29|1|V|scss
				left: 50px;
0048edbb481c59c6cfd3734af16a3556|file:///home/jdv/js/reactDice/src/sass/_map.scss|43|3|v|scss
	#map-image-container
58bb7ffa9db653dbd0fd7024df6d43eb|file:///home/jdv/js/reactDice/src/sass/_map.scss|26|3|v|scss
	#map-zoom-overlay
61636574b06c856920e9157221a0763a|file:///home/jdv/js/reactDice/src/components/Map/Image.js|15|25|v|javascript
	id="map-zoom-overlay"
15f29a76fe2f64c60520b5e5cc00a5ac|file:///home/jdv/js/reactDice/src/components/Map/Image.js|8|19|v|javascript
	map-image-container
886c3dafc3c19725697583afe33e9abb|file:///home/jdv/js/reactDice/src/components/Map/Image.js|8|39|v|javascript
	 id='map-image-container'
3b3307d53679043e7decfe414fd425bb|file:///home/jdv/js/reactDice/src/sass/_map.scss|43|1|V|scss
			.map-image-container:hover .overlay {
				opacity: 1;
			}
072c4dfc494910ade8b1f97c9a20c787|file:///home/jdv/js/reactDice/src/sass/_map.scss|24|1|V|scss
	
			/* The overlay effect - lays on top of the container and over the image */
			.overlay {
				position: absolute;
				left: 22%;
				top: 73%;
				background: rgb(0, 0, 0);
				background: rgba(0, 0, 0, 0.5); /* Black see-through */
				color: #f1f1f1;
				width: 49%;
				transition: .5s ease;
				opacity:0.2;
				color: white;
				font-size: 20px;
				padding: 20px;
				text-align: center;
			}
	
			/* When you mouse over the container, fade in the overlay title */
5a62f48b53c1cc089b01ea8880d417fe|file:///home/jdv/js/reactDice/src/sass/_map.scss|26|1|^v|scss
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
bb3dcbe3837a011a140919bd4e04f9aa|file:///home/jdv/js/reactDice/src/sass/_map.scss|28|1|V|scss
			position: absolute;
			left: 22%;
			top: 73%;
9df22f196a33acd0b372fe502de51211|file:///home/jdv/js/reactDice/src/sass/_map.scss|21|16|v|scss
	auto
7364adbdf5e4dc7086762918c9d3e613|file:///home/jdv/js/reactDice/src/sass/_map.scss|29|15|V|scss
			background: rgb(0, 0, 0);
fe04fe652005be163bebf9e86e182818|file:///home/jdv/js/reactDice/src/sass/_map.scss|33|1|V|scss
			margin: auto;
			margin-top: ;
f0edd0d3a882c802cd622617cdba0157|file:///home/jdv/js/reactDice/src/sass/_map.scss|33|19|V|scss
			background: rgba(0, 0, 0, 0.5); /* Black see-through */
fc021d54683383e5078ab9fefc4d53c8|file:///home/jdv/js/reactDice/src/sass/_map.scss|48|10|v|scss
	radius
a4b42cb4283184af700cabf2ad982b93|file:///home/jdv/js/reactDice/src/sass/_map.scss|49|20|V|scss
			text-shadow: 0 0 8px #000000;
d1b2c5b2d1c85df8153b9c01ce573f57|file:///home/jdv/js/reactDice/src/sass/_map.scss|48|19|V|scss
			border-width: 5px;
ed04ac9b03cbd0fbb57eca91007a4de5|file:///home/jdv/js/reactDice/src/sass/_map.scss|37|15|V|scss
			color: white;
83bbe38b268441a3fca89ccc80e69ad2|file:///home/jdv/js/reactDice/src/sass/_map.scss|41|1|V|scss
			-webkit-text-stroke-width: 3px;
41159ce7c4713eb9f12ec4ea894a9595|file:///home/jdv/js/reactDice/src/sass/_map.scss|48|31|V|scss
			text-shadow: 2px 2px 2px #000000;
e3138dd57f443388115aafc9fa6dce1c|file:///home/jdv/js/reactDice/src/sass/_map.scss|22|1|V|scss
				max-height: 50%;
32c0de9cbab0166cfebffcf3004fcc4b|file:///home/jdv/js/reactDice/src/sass/_map.scss|22|21|V|scss
				margin-top: auto;
				margin-bottom: auto;
224f1b4e5ce35efdb6bd020a357230b9|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|15|1|V|scss
	
		$default-opacity: 100%;
		.unheld {
			height: 5em;
			width: auto;
			margin-left: 1%;
			margin-right: 1%;
			opacity: $default-opacity;
			animation-name: shrink-glow;
			animation-duration: 0.5s;
			animation-timing-function: ease-in;
			animation-fill-mode: forwards;
		}
	
			.unheld:hover {
				animation-name: hover-glow;
				animation-duration: 0.5s;
				animation-timing-function: ease-out;
				animation-fill-mode: forwards;
			}
	
			@keyframes hover-glow {
				0% {box-shadow: 0 0 10px 5px rgba(colors.$Yellow, 0.5); /* hoffset voffset blur spread color */}
				100% {box-shadow: 0 0 10px 5px rgba(colors.$Green, 0.8); /* hoffset voffset blur spread color */}
			}
	
			@keyframes grow-glow {
				0% {box-shadow: 0 0 10px 5px rgba(colors.$Yellow, 0.5); /* hoffset voffset blur spread color */}
				100% {box-shadow: 0 0 10px 5px rgba(colors.$Yellow, 0.8); /* hoffset voffset blur spread color */}
			}
	
			@keyframes shrink-glow {
				0% {box-shadow: 0 0 10px 5px rgba(colors.$Green, 0.8); /* hoffset voffset blur spread color */}
				100% {box-shadow: 0 0 10px 5px rgba(colors.$Yellow, 0.2); /* hoffset voffset blur spread color */}
			}
	
		.held {
			opacity: $default-opacity;
			transition: 0.1s;
			animation-name: grow-glow;
			animation-duration: 0.5s;
			animation-timing-function: ease-out;
			animation-fill-mode: forwards;
	
			height: 5em;
			width: auto;
			margin-left: 1%;
			margin-right: 1%;
		}
	
		.saved {
			opacity: 100%;
		}
	
1487bfdbff6981cb610a29a19f75d42d|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|17|1|^v|scss
		
		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
	
		
		
		
		
	
		
		
		
		
	
		
		
		
		
	
		
		
		
		
		
		
		
	
		
		
		
		
		
	
		
		
		
3162ad2bdc832b7a4cb9f38a4f9455aa|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|22|1|V|scss
		margin-top: 1%;
3b4da4576b3a509cfe22ad3dca24cfc9|file:///home/jdv/js/reactDice/src/sass/_dicetray.scss|25|2|v|scss
	animation-duration
d2c8ddb957be6c2853a9e7462780c625|file:///home/jdv/js/reactDice/package.json|23|1|V|json
			"start": "concurrently \"clear && echo 'Starting React Dev Server and watching Sass'\" \"npm run watch-sass\" \"react-scripts start\"",
7a0b4be5325a98c61c407bef16b74293|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	concurrently
8e876bf5526a072d5e8f646c3295cefc|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 \"clear
0172f2bb81318b143f95516431cc2045|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 echo
3c5a35f21a4f39bb2249349a59bae8dd|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 'Starting
468f655b5612243fa903a071ec2cc7b0|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 React
2e655959910325f7670037ea68e0c248|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 Dev
2956a84f99681d49778add10db1c9c20|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 Server
74c04431683b26b598564ea06fcf16c3|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 and
2a0f7cfd645b2f5c13915876b83f5228|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 watching
76f578a77a1a172781a22cc010cd4b08|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 Sass'\"
85f9a9df6853f7e9b44dc58f862121d8|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 \"npm
5485dddbce3115a704d7e5160b63bf7e|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 run
a8865bf50048535b6917db59bf947c62|file:///home/jdv/js/reactDice/package.json|23|13|v|json
	 watch-sass\"
6d56af197f25ca729df0bb7ec096e6b0|file:///home/jdv/js/reactDice/src/Store.js|6|1|^v|javascript
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
cea657c89c83d7cf89b14a0aaac03f7b|file:///home/jdv/js/reactDice/src/Store.js|59|1|^v|javascript
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
cdaf0fd4acd551933c76e2dd19962ff8|file:///home/jdv/js/reactDice/src/Store.js|72|1|^v|javascript
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
ee05bf1438e5ca9b87fe95c367c4db69|file:///home/jdv/js/reactDice/src/Store.js|73|1|^v|javascript
		
		
		
		
10bd363b42aa29a924c195963d092888|file:///home/jdv/js/reactDice/src/Store.js|157|1|V|javascript
											
523c1ee4a2579ecd38ec73ae43623751|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|5|1|V|javascript
		// const socket = UseStore(state => state.socket)
e7e56345fbe2774b6a8e0bf0981f673d|file:///home/jdv/js/reactDice/server/main.go|58|1|V|go
		http.Handle("/", http.FileServer(http.Dir("./asset")))
dba32610837effe01e581a1a4e638ea6|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|9|1|V|javascript
	
		// Example from Socket.io, originally in the index.html of server assets folder for their example chat
		// var socket = io();
		// // socket.emit('msg', 'hello');
		// var s2 = io("/chat");
		// socket.on('reply', function(msg){
			// $('#messages').append($('<li>').text(msg));
		// });
		// $('form').submit(function(){
			// s2.emit('msg', $('#m').val(), function(data){
				// $('#messages').append($('<li>').text(data));
			// });
			// socket.emit('notice', $('#m').val());
			// $('#m').val('');
			// return false;
		// });
	
480f81b5d6700a9076eed34012dfcbf8|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|5|1|V|javascript
		const chatSocket = UseStore(state => state.chatSocket)
7b8c5d48e48b46a9bcd18f0e4af981ac|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|17|1|V|javascript
				if (inputBox.value) {
					chatSocket.emit('msg', inputBox.value);
					inputBox.value = '';
				}
d034dcd770ef6e6de53c4c5d1b8436bc|file:///home/jdv/js/reactDice/src/Store.js|49|1|V|javascript
		socket: openSocket('http://localhost:8000'),
		chatSocket: openSocket('http://localhost:8000/'),
0f68c13b19af96d3e707cc7571069acc|file:///home/jdv/js/reactDice/server/main.go|8|2|V|go
		"github.com/googollee/go-socket.io"
b8839f0225f21dcc04b17dfe992b2804|file:///home/jdv/js/reactDice/server/main.go|11|1|V|go
		// Start a new socketio server
		server, serveError := socketio.NewServer(nil)
		if serveError != nil {
			log.Fatalln(serveError)
		}
	
		server.OnConnect("/", func(s socketio.Conn) error {
			s.SetContext("")
			fmt.Println("Client connected:", s.ID())
			return nil
		})
	
		server.OnEvent("/", "notice", func(s socketio.Conn, msg string) {
			fmt.Println("notice:", msg)
			s.Emit("reply", "You: "+msg)
		})
	
		server.OnEvent("/chat", "msg", func(s socketio.Conn, msg string) string {
			s.SetContext(msg)
			return "Server Received Message: " + msg
		})
	
		server.OnEvent("/", "chat message", func(s socketio.Conn, msg string) string {
			return "React sent a message: " + msg
		})
	
		server.OnEvent("/", "bye", func(s socketio.Conn) string {
			last := s.Context().(string)
			s.Emit("bye", last)
			s.Close()
			return last
		})
	
		server.OnError("/", func(s socketio.Conn, e error) {
			fmt.Println("meet error:", e)
		})
	
		server.OnDisconnect("/", func(s socketio.Conn, reason string) {
			fmt.Println("closed", reason)
		})
	
		go server.Serve()
		defer server.Close()
	
		http.Handle("/socket.io/", server)
		// When visiting localhost:8000, sends contents of /server/asset, which includes an index.html
		fmt.Println("Server started on localhost:8000...")
		log.Fatal(http.ListenAndServe(":8000", nil))
29204d45751cf986e567e4e21746c7cb|file:///home/jdv/js/reactDice/public/index.html|20|1|V|html
		<!-- Include socket.io for realtime communication -->
		<!-- <script src="https://cdn.socket.io/socket.io-1.2.0.js"></script> -->
d3974844675491dfe14233d861cb8342|file:///home/jdv/js/reactDice/firebase/firebase.json|15|1|V|json
	    "public": "",
27573d806990ac47c71ef6ec1fcbfecc|file:///home/jdv/js/reactDice/.gitignore|107|1|V|conf
	./src/services/firebase.js
5120eb65b7751f47a36fd832fa4a5a4a|file:///home/jdv/js/reactDice/.gitignore|107|1|V|conf
	/src/services/firebase.js
b68a9279ce1668f42dad299f322581eb|file:///home/jdv/js/reactDice/src/services/firebase.js|5|12|v|javascript
	ADD-YOUR-DETAILS-HERE
8dc11dfa414f9e9ee71fbffc3fa61e87|file:///home/jdv/js/reactDice/src/services/firebase.js|4|1|V|javascript
	const config = {
	  apiKey: "AIzaSyAJNO5gYtMDf30V4ONR3BlasbyvKBYLCok",
	  authDomain: "reactdice-5f1e2.firebaseapp.com",
	  databaseURL: "ADD-YOUR-DETAILS-HERE"
	};
5b8a4ff75f53e886206af17ed4ff1b30|file:///home/jdv/js/reactDice/src/websocket.js|17|1|V|javascript
	console.log();
00a15d70bb758a2239cfbe644e5499a5|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|64|1|V|vim
	
	"*****************************************************************************
	" Center line in middle of screen while in insert mode
	"*****************************************************************************
c29eb8c3e5fd223e46abb0e053c9c8d7|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|66|3|v|vim
	Center line in middle of screen while in insert mode
f056a52e430c4d8bfcadd37c1a9bb5ff|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|69|1|V|vim
	inoremap <silent> <C-h> $
e20ec8543f23bedc2c60018812f9df0e|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|69|1|V|vim
	inoremap <silent> <C-h> $
	nnoremap <silent> <C-h> $
	
2e5593bf064acf73e73cdcee5fde8406|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|70|1|V|vim
	nnoremap <silent> <C-h> 0
b5333e510b5916cde34867830b5667a5|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|74|1|V|vim
	nnoremap <silent> <C-l> $
6a8301a1d0ead721bcd29d98f5f1752e|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|75|1|V|vim
	vnoremap <silent> <C-l> $
9c5a9f9bde157cc43e757958cae2fc46|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|76|1|V|vim
	
	inoremap <silent> <C-j> $
	nnoremap <silent> <C-j> $
	vnoremap <silent> <C-j> $
1fbd6ad13295874d5f928e9dd4f32fdf|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|84|1|V|vim
	" Left Curly Brace
	inoremap <silent> <C-k> {
	nnoremap <silent> <C-k> {
	vnoremap <silent> <C-k> {
	
a866af19e97ce41601038c316eb0d36b|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|54|1|V|vim
	inoremap qa <Esc>la
37eba660a2f8b7a4bdc70392087d9f6b|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|95|3|v|vim
	Left Curly Brace
86f83f99bf9ed8afd2251e834a6d919b|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|95|1|V|vim
	" Percent
	inoremap <silent> <C-n> %
	nnoremap <silent> <C-n> %
	vnoremap <silent> <C-n> %
	
adaaee4b22041c27198d410c68d952c9|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|100|3|v|vim
	Percent
556135225066d7d28ffd3c5ad49c30ee|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|89|1|V|vim
	
	" Left Curly Brace
	inoremap <silent> <C-k> {
	nnoremap <silent> <C-k> {
	vnoremap <silent> <C-k> {
ec8df9cf549ed7e080da00618536e059|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|93|1|V|vim
	" Backtick
	inoremap <silent> <C-'> `
	nnoremap <silent> <C-'> `
	vnoremap <silent> <C-'> `
	
efa64052a8f0a142860105a21f19c2b1|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|98|3|v|vim
	Backtick
b09c98c62e09be6ebb40c2bd63ea2fde|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|68|1|V|vim
	" Home
	inoremap <silent> <C-h> 0
	nnoremap <silent> <C-h> 0
	vnoremap <silent> <C-h> 0
	
1e153310f379d2ff2ecdbff2132c7294|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|126|1|V|vim
	"*****************************************************************************
	" Move line to bottom of screen
	"*****************************************************************************
	
	nnoremap <silent> zj zb2j2k
	
6ff4a3634fa27315ad7c6ac324c4ed96|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|133|3|v|vim
	Move line to bottom of screen
b34901222c5db48566f831ea504f5a52|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|132|1|V|vim
	"*****************************************************************************
	" Select All
	"*****************************************************************************
	
	nnoremap <silent> <C-a> ggVG
	
45e96c0a422ce8a1a6ec1bd5eb9625c6|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|139|3|v|vim
	Select All
3c343ccd737540b1999b325724e197b3|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|142|1|V|vim
	nnoremap <silent> ct$ c$
632dc6a1df0c18c6a3268af704c356d3|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|140|23|v|vim
	********************************************************
b3ffec024cf6d48e4353de138268130a|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|140|23|v|vim
	********************************************************
	
	nnoremap <silent> ct$
29aa5cca54ba6bfee8f45461fbeacfc8|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|140|23|v|vim
	********************************************************
	
	n
c4a02d86f7096cf3e0e4cad3edaadc6a|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|138|1|V|vim
	"*****************************************************************************
	" Change till end of line / Delete till end of line
	"*****************************************************************************
	
	nnoremap <silent> ct$ c$
	nnoremap <silent> dt$ d$
9ed657cf2bd58455de91bb53f05e2186|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/easymotion.vim|28|1|V|vim
	map s <Plug>(easymotion-overwin-f)
cd160fa36c94ed8101c47f3cd39f99a2|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/easymotion.vim|29|1|V|vim
	vnoremap s <Plug>(easymotion-overwin-f)
1f8bd2c6fc6daad40f0a429748e79f4a|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/easymotion.vim|29|4|V|vim
	vmap s <Plug>(easymotion-overwin-line)
2cc30c8129df4602413b4f3043849f19|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/easymotion.vim|43|1|V|vim
	
	
	"*****************************************************************************
	" JK motions: Line motions
	"*****************************************************************************
	
	map <Leader>j <Plug>(easymotion-j)
	map <Leader>k <Plug>(easymotion-k)
377568432b054d0e3a8c4186286ff4d0|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/init.vim|47|1|V|vim
	source ~/github.com/jdvober/dotfiles/.config/nvim/sourced/lexima.vim
5edc86789965f09629e667ed23384cb5|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/init.vim|53|1|V|vim
	" source ~/github.com/jdvober/dotfiles/.config/nvim/sourced/treesitter.vim
423b08e904df8a70975dff4adc7c4561|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/init.vim|53|26|V|vim
	source ~/github.com/jdvober/dotfiles/.config/nvim/sourced/treesitter.vim
773f86b9bf9f451e07779149473e4a5d|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/init.vim|48|59|v|vim
	lexima
d8dcd89453c2f8c6745c110fa95c911f|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/vim-rainbow.vim|20|1|V|vim
	                                                                    
4b25018873c5c230879bf5bfbbd0d517|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|62|5|V|vim
	map <S-k> <Nop>
7fb32e831c64079ca854ef5cdf72e615|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|61|1|V|vim
	" Remove default binding for P first
5572028c3590e85aeaa9ef72a32c7d0d|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/treesitter.vim|42|34|v|vim
	, -- one of "all", "maintained" (parsers with maintainers), or a list of languages
6eed751a399560f9e201a822c93bc0e7|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|110|24|V|vim
	onoremap <silent> dt$ d$
0b9ffce25e4e8e70315377b816381b12|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|110|22|V|vim
	onoremap <silent> t$ $
1b7c627f713a6cbd4459eba758df63df|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/treesitter.vim|44|19|v|vim
	              -- false will disable the whole extension
3984493a5b7b1bf47c0133aa8c119a5f|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/treesitter.vim|45|18|V|vim
	    disable = { "c", "rust" },  -- list of language that will be disabled
30e7c17d953071af4f0a5d3dcc05be89|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/treesitter.vim|16|4|V|vim
	lua <<EOF
	require'nvim-treesitter.configs'.setup {
	" highlight = {
	  " enable = true,
	  " custom_captures = {
	    " -- Highlight the @foo.bar capture group with the "Identifier" highlight group.
	    " ["foo.bar"] = "Identifier",
	  " },
	" },
	" incremental_selection = {
	  " enable = true,
	  " keymaps = {
	    " init_selection = "gnn",
	    " node_incremental = "grn",
	    " scope_incremental = "grc",
	    " node_decremental = "grm",
	  " },
	" },
	" indent = {
	  " enable = true
	" },
	}
	EOF
	
530aa35af867233729d4d1a3b00c20df|file:///home/jdv/js/reactDice/src/websocket.js|31|1|V|javascript
		// This function is called by our React application to register a callback that needs to be called everytime a new message is received
		export const registerOnMessageCallback = (fn) => {
			// The callback function is supplied as an argument and assigned to the `onMessageCallback` variable we declared earlier
			onMessageCallback = fn
5f1f645d39e38ad1e6f8d3c3236cd9fb|file:///home/jdv/js/reactDice/src/components/Chat/Messages.js|7|1|V|javascript
		// Store
		const chatHistory = Store(state => state.chatHistory)
53b3a5f7103607bbd908aa9c53e8bd26|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|4|1|V|javascript
	import { v4 as uuid } from 'uuid';
82e1b7da6bf87b4eefd9586e87e2412b|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|90|1|V|vim
	" Left Curly Brace
	inoremap <silent> <C-k> {}<C-o>i
	nnoremap <silent> <C-k> {
	vnoremap <silent> <C-k> {
	
8d14c67344ae64f61fbebc1b5fba89e4|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/init.vim|42|1|V|vim
	source ~/github.com/jdvober/dotfiles/.config/nvim/sourced/vimtex.vim
	source ~/github.com/jdvober/dotfiles/.config/nvim/sourced/vim-latex-live-preview.vim
	source ~/github.com/jdvober/dotfiles/.config/nvim/sourced/tex-conceal.vim
de4d66c65bb00b6ae71e0fa00ab9689b|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|18|35|V|javascript
			console.log(`onMessageReceived: $`);
1cb251ec0d568de6a929b520c4aed8d1|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|18|20|v|javascript
	text
2de932c18c75a61e1dbb0d42782ea001|file:///home/jdv/js/reactDice/src/stores/ChatStore.js|6|16|V|javascript
		diceTheme: ["numbers", "letters"],
10cf84e6db2636bacd21de7d0bbed04e|file:///home/jdv/js/reactDice/src/stores/ChatStore.js|57|1|V|javascript
		dice: [
			{
				id: 0,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 1,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 2,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 3,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 4,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 5,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 6,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 7,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 8,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 9,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 10,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
		], 
	
		sortDice: () => 
			set(state =>  {
				state.dice.sort((a, b) =>  a.val - b.val)
			}),
	
		toggleHeld: (id) => 
			set(state =>  {
				//toggle the value if not saved
				if (state.dice[id].saved === true) {
					console.log(`\tZustand -- Die${id} was already saved, so it's held state was not flipped.`);
				} else {
					state.dice[id].held = !state.dice[id].held;
					console.log(`\tZustand -- held state of Die${id}: ${state.dice[id].held}`);
				}
			}),
		toggleSaved: (id) => 
			set(state =>  {
				//toggle the value
				state.dice[id].saved = !state.dice[id].saved;
				console.log(`\tZustand saved state of Die${id}: ${state.dice[id].saved}`);
			}),
		rollDice: () => 
			set(state =>  {
				// Roll the dice that are not held
				console.log(`Zustand -- Roll Dice Button Pressed`);
				state.dice.forEach(
					(die) => {
						if (!die.held === true && !die.saved === true) { // If a die is not held and not saved, reroll it.
							die.val = Math.floor(Math.random() * (7 - 1) + 1)
							// Reset the held status to trigger useEffect
							die.held = false;
	
							console.log(`Zustand -- Die${die.id} val updated: ${die.val}`); 
						} else { // If the die is either held or saved, do not reroll it, and make sure it is set to saved and reset it to not be held for CSS purposes
							if (die.held) {
								console.log(`Zustand -- Die${die.id} was saved because it was marked as held`); 
							}                        
							if (die.saved) {
								console.log(`Zustand -- Die${die.id} was saved because it was previously saved`); 
							}
							die.held = false;
							die.saved = true;
						} 
					}
				)
			}),
d2fd4abffdb4f128bb0fe4b7974dd26a|file:///home/jdv/js/reactDice/src/stores/ChatStore.js|48|1|V|javascript
	
		latestMessage: "This is the initial latest message.",
		updateLatestMessage: (text) => set(() => ({
			latestMessage: text
		})),
		addMessageToHistory: () => set(state => ({ 
			chatHistory: [...state.chatHistory, {id: state.chatHistory.len, key: state.chatHistory.len, content: state.latestMessage}]
		})),
	
3b7d71f9954faf6c4c8779d201bf6150|file:///home/jdv/js/reactDice/src/stores/DiceStore.js|6|1|V|javascript
		chatHistory: [
			{
				id: 0,
				key: 0,
				content: "0 - Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et ",
			},
			{
				id: 1,
				key: 1,
				content: "1 - no sea takimata sanctus est Lorem ipsum dolor sit amet",
			},
			{
				id: 2,
				key: 2,
				content: "2 - dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren",
			},
			{
				id: 3,
				key: 3,
				content: "3 - 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣",
			},
			{
				id: 4,
				key: 4,
				content: "4 - Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et ",
			},
			{
				id: 5,
				key: 5,
				content: "5 - no sea takimata sanctus est Lorem ipsum dolor sit amet",
			},
			{
				id: 6,
				key: 6,
				content: "6 - dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren",
			},
			{
				id: 7,
				key: 7,
				content: "7 - 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣",
			},
		],
	
		latestMessage: "This is the initial latest message.",
		updateLatestMessage: (text) => set(() => ({
			latestMessage: text
		})),
		addMessageToHistory: () => set(state => ({ 
			chatHistory: [...state.chatHistory, {id: state.chatHistory.len, key: state.chatHistory.len, content: state.latestMessage}]
		})),
	
fe63644a3734fac468d11ff5ecbb089d|file:///home/jdv/js/reactDice/src/stores/UI.js|5|1|V|javascript
		chatHistory: [
6f79cb697a4f21ec35f34b0466e3df19|file:///home/jdv/js/reactDice/src/stores/UI.js|5|1|V|javascript
	
				id: 0,
				key: 0,
				content: "0 - Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et ",
			},
			{
				id: 1,
				key: 1,
				content: "1 - no sea takimata sanctus est Lorem ipsum dolor sit amet",
			},
			{
				id: 2,
				key: 2,
				content: "2 - dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren",
			},
			{
				id: 3,
				key: 3,
				content: "3 - 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣",
			},
			{
				id: 4,
				key: 4,
				content: "4 - Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et ",
			},
			{
				id: 5,
				key: 5,
				content: "5 - no sea takimata sanctus est Lorem ipsum dolor sit amet",
			},
			{
				id: 6,
				key: 6,
				content: "6 - dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren",
			},
			{
				id: 7,
				key: 7,
				content: "7 - 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣",
			},
		],
	
		latestMessage: "This is the initial latest message.",
		updateLatestMessage: (text) => set(() => ({
			latestMessage: text
		})),
		addMessageToHistory: () => set(state => ({ 
			chatHistory: [...state.chatHistory, {id: state.chatHistory.len, key: state.chatHistory.len, content: state.latestMessage}]
		})),
	
		dice: [
			{
				id: 0,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 1,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 2,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 3,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 4,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 5,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 6,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 7,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 8,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 9,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 10,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
		], 
	
		sortDice: () => 
			set(state =>  {
				state.dice.sort((a, b) =>  a.val - b.val)
			}),
	
		toggleHeld: (id) => 
			set(state =>  {
				//toggle the value if not saved
				if (state.dice[id].saved === true) {
					console.log(`\tZustand -- Die${id} was already saved, so it's held state was not flipped.`);
				} else {
					state.dice[id].held = !state.dice[id].held;
					console.log(`\tZustand -- held state of Die${id}: ${state.dice[id].held}`);
				}
			}),
		toggleSaved: (id) => 
			set(state =>  {
				//toggle the value
				state.dice[id].saved = !state.dice[id].saved;
				console.log(`\tZustand saved state of Die${id}: ${state.dice[id].saved}`);
			}),
		rollDice: () => 
			set(state =>  {
				// Roll the dice that are not held
				console.log(`Zustand -- Roll Dice Button Pressed`);
				state.dice.forEach(
					(die) => {
						if (!die.held === true && !die.saved === true) { // If a die is not held and not saved, reroll it.
							die.val = Math.floor(Math.random() * (7 - 1) + 1)
							// Reset the held status to trigger useEffect
							die.held = false;
	
							console.log(`Zustand -- Die${die.id} val updated: ${die.val}`); 
						} else { // If the die is either held or saved, do not reroll it, and make sure it is set to saved and reset it to not be held for CSS purposes
							if (die.held) {
								console.log(`Zustand -- Die${die.id} was saved because it was marked as held`); 
							}                        
							if (die.saved) {
								console.log(`Zustand -- Die${die.id} was saved because it was previously saved`); 
							}
							die.held = false;
							die.saved = true;
						} 
					}
				)
			}),
956b54af52da3cadf44ac66447745874|file:///home/jdv/js/reactDice/src/stores/GamestateStore.js|5|1|V|javascript
		diceTheme: ["numbers", "letters"],
		chatHistory: [
			{
				id: 0,
				key: 0,
				content: "0 - Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et ",
			},
			{
				id: 1,
				key: 1,
				content: "1 - no sea takimata sanctus est Lorem ipsum dolor sit amet",
			},
			{
				id: 2,
				key: 2,
				content: "2 - dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren",
			},
			{
				id: 3,
				key: 3,
				content: "3 - 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣",
			},
			{
				id: 4,
				key: 4,
				content: "4 - Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et ",
			},
			{
				id: 5,
				key: 5,
				content: "5 - no sea takimata sanctus est Lorem ipsum dolor sit amet",
			},
			{
				id: 6,
				key: 6,
				content: "6 - dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren",
			},
			{
				id: 7,
				key: 7,
				content: "7 - 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣",
			},
		],
	
		latestMessage: "This is the initial latest message.",
		updateLatestMessage: (text) => set(() => ({
			latestMessage: text
		})),
		addMessageToHistory: () => set(state => ({ 
			chatHistory: [...state.chatHistory, {id: state.chatHistory.len, key: state.chatHistory.len, content: state.latestMessage}]
		})),
	
		dice: [
			{
				id: 0,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 1,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 2,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 3,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 4,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 5,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 6,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 7,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 8,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 9,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
			{
				id: 10,
				val: Math.floor(Math.random() * (7 - 1) + 1),
				held: false,
				saved: false,
			},
		], 
	
		sortDice: () => 
			set(state =>  {
				state.dice.sort((a, b) =>  a.val - b.val)
			}),
	
		toggleHeld: (id) => 
			set(state =>  {
				//toggle the value if not saved
				if (state.dice[id].saved === true) {
					console.log(`\tZustand -- Die${id} was already saved, so it's held state was not flipped.`);
				} else {
					state.dice[id].held = !state.dice[id].held;
					console.log(`\tZustand -- held state of Die${id}: ${state.dice[id].held}`);
				}
			}),
		toggleSaved: (id) => 
			set(state =>  {
				//toggle the value
				state.dice[id].saved = !state.dice[id].saved;
				console.log(`\tZustand saved state of Die${id}: ${state.dice[id].saved}`);
			}),
		rollDice: () => 
			set(state =>  {
				// Roll the dice that are not held
				console.log(`Zustand -- Roll Dice Button Pressed`);
				state.dice.forEach(
					(die) => {
						if (!die.held === true && !die.saved === true) { // If a die is not held and not saved, reroll it.
							die.val = Math.floor(Math.random() * (7 - 1) + 1)
							// Reset the held status to trigger useEffect
							die.held = false;
	
							console.log(`Zustand -- Die${die.id} val updated: ${die.val}`); 
						} else { // If the die is either held or saved, do not reroll it, and make sure it is set to saved and reset it to not be held for CSS purposes
							if (die.held) {
								console.log(`Zustand -- Die${die.id} was saved because it was marked as held`); 
							}                        
							if (die.saved) {
								console.log(`Zustand -- Die${die.id} was saved because it was previously saved`); 
							}
							die.held = false;
							die.saved = true;
						} 
					}
				)
			}),
145a7089ffc82b677cd1259b8cdf3e8d|file:///home/jdv/js/reactDice/src/components/Chat/Messages.js|3|1|V|javascript
	import ChatStore from '../../Store'
f6877ca38b0215c7827642896a595c60|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|7|1|V|javascript
	import { registerOnMessageCallback, send, startWebsocketConnection } from '../../websocket'
9a0364b9e99bb480dd25e1f0284c8555|file:///home/jdv/js/reactDice/src/components/Chat/Messages.js|24|75|v|javascript
	content
b072de6d2511b8f273e770fe480beb39|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|13|1|V|javascript
		const chatHistory = ChatStore(state => state.chatHistory)
54c215d6f47f9ebc15a5e035711d5e07|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|14|8|v|javascript
	chatHistory
cb49dba933a5594b273bf360d9b4f0f0|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|25|18|V|javascript
			let newMessages = chatHistory.concat(msg)
de70938849b75d3db63bba421c93e018|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|32|6|v|javascript
	messages
50908acfffd0cd10637e04ab934a6b5b|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|14|1|V|javascript
		const updateLatestMessage = ChatStore(state => state.updateLatestMessage)
1defe810cbc80d3f04ad25957a9aad1d|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|15|8|v|javascript
	updateLatestMessage
78e731027d8fd50ed642340b7c9a63b3|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|39|9|v|javascript
	message
3ab8d60f3f03fe4b32f51bb24ed22806|file:///home/jdv/js/reactDice/src/stores/ChatStore.js|20|1|V|javascript
				uuid: uuid(),
a7cf9677ebfeae3e4d581357a6655449|file:///home/jdv/js/reactDice/src/stores/ChatStore.js|17|1|V|javascript
		chatHistory: [
			{
				id: 0,
				uuid: uuid(),
				key: 0,
				data: "0 - Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et ",
			},
			{
				id: 1,
				uuid: uuid(),
				key: 1,
				data: "1 - no sea takimata sanctus est Lorem ipsum dolor sit amet",
			},
			{
				id: 2,
				uuid: uuid(),
				key: 2,
				data: "2 - dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren",
			},
			{
				id: 3,
				uuid: uuid(),
				key: 3,
				data: "3 - 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣",
			},
			{
				id: 4,
				uuid: uuid(),
				key: 4,
				data: "4 - Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et ",
			},
			{
				id: 5,
				uuid: uuid(),
				key: 5,
				data: "5 - no sea takimata sanctus est Lorem ipsum dolor sit amet",
			},
			{
				id: 6,
				uuid: uuid(),
				key: 6,
				data: "6 - dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren",
			},
			{
				id: 7,
				uuid: uuid(),
				key: 7,
				data: "7 - 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣",
			},
		],
e47d9bd3254c942d9e1a0fa0a3214bbc|file:///home/jdv/js/reactDice/src/stores/GamestateStore.js|12|1|v|javascript
				id: 1,
3e5e877ef28f376720e449412e402ba2|file:///home/jdv/js/reactDice/src/stores/GamestateStore.js|12|1|V|javascript
	
				uuid: uuid(),
				key: 1,
				data: "1 - no sea takimata sanctus est Lorem ipsum dolor sit amet",
			},
			{
				id: 2,
				uuid: uuid(),
				key: 2,
				data: "2 - dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren",
			},
			{
				id: 3,
				uuid: uuid(),
				key: 3,
				data: "3 - 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣",
			},
			{
				id: 4,
				uuid: uuid(),
				key: 4,
				data: "4 - Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et ",
			},
			{
				id: 5,
				uuid: uuid(),
				key: 5,
				data: "5 - no sea takimata sanctus est Lorem ipsum dolor sit amet",
			},
			{
				id: 6,
				uuid: uuid(),
				key: 6,
				data: "6 - dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren",
			},
			{
				id: 7,
				uuid: uuid(),
				key: 7,
				data: "7 - 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣",
			},
eda5faddc7e0ca843883ffa02b22affa|file:///home/jdv/js/reactDice/src/stores/GamestateStore.js|11|19|V|javascript
				data: "0 - Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et ",
9a5b3387fbd11445deafd59294b38fef|file:///home/jdv/js/reactDice/src/stores/GamestateStore.js|6|1|V|javascript
			{
				id: 0,
				uuid: uuid(),
				key: 0,
				username: "Joe",
			},
095d15cc3795d23cfda1642a59a81e3b|file:///home/jdv/js/reactDice/src/stores/ChatStore.js|7|22|V|javascript
		// TODO: Temporart hard-coded username is applied
		let username = "Joe";
decaae1e472274291adee6f3a0ecb758|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|13|1|V|javascript
		// TODO: Temporart hard-coded username is applied
		let username = "Joe";
	
26c0c61e603ac621a5f5f46a12d818f4|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|17|24|v|javascript
	ChatStore(state => state.latestMessage)
	
55f6507b8e39426e7d559db45ab1fdd0|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|15|19|v|javascript
	"Joe"
0e3ec4e8d9cad03cff1d2104d0ffaf6b|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|42|1|V|javascript
		// This method accepts the message text or data.  It then constructs the message object, stringifies it and sends the string to the server using the `send` function imported from the websockets package
		let sendMessage = (data) => {
			const chatMessage = {
				username: username,
				data: data,
				uuid: uuid()
			}
			console.log("Message: ", chatMessage)
			console.log("Send: ", send)
			send(JSON.stringify(chatMessage))
		}
	
732014da85ecc32606d30f80f4d3e038|file:///home/jdv/js/reactDice/src/components/Chat/ChatInput.js|1|1|V|javascript
	import ChatStore from '../../ChatStore'
ec8c7390c9756e281c9b3904d9aaf96c|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|4|1|V|javascript
	import GamestateStore from '../../GamestateStore'
7e3bdf57a0bfad5ec0ff02a2866bf81f|file:///home/jdv/js/reactDice/src/components/Chat/Chat.js|14|1|V|javascript
		// TODO: Temporary hard-coded username is applied
		const username = GamestateStore(state => state.username);
	
447c59d921a5e0311049a1a2ef6e69b5|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|181|1|V|vim
	"*****************************************************************************
	" Toggle comments
	"*****************************************************************************
	
c7136f91c65adb1d534ebb64a954aaf8|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|182|3|v|vim
	Toggle comments
6a85a673032024317dbf991b9f4fa555|file:///home/jdv/github.com/jdvober/dotfiles/.config/nvim/sourced/keybindings.vim|185|1|V|vim
	nnoremap ? :%s/
